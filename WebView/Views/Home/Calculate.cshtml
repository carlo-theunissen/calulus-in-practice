@model CalculateViewModel
@for (var i = 0; i < Model.graph.Count; i++)
{
    <div class="formulaContainer">
        <canvas id="plot@(i)" height="340" width="680">
        </canvas>
    </div>
}

@for (var x = 0; x < Model.graph.Count; x++)
{
    <script>
        var test = @Model.graph[x].Length;
        var ctx = document.getElementById("plot@(x)").getContext('2d');
        var myBarChart = new Chart(ctx,
            {
                type: 'bar',
                data: {
                    labels: [@for (var i = 0; i < Model.graph[x].Length; i++)
                             {
                                 if (Model.graph[x][i] > 0)
                                 {
                                     @Html.Raw(i + ",")
                                     ;
                                 }
                             }],
                    datasets: [
                        {
                            label: '',
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132,)',
                            //data: [12, 19, 3, 5, 2, 3,12, 19, 3, 5, 2, 3,],      
                            data: [@for (var i = 0; i < Model.graph[x].Length; i++)
                                   {
                                       if (Model.graph[x][i] > 0)
                                       {
                                           @Html.Raw(Model.graph[x][i] + ",")
                                           ;
                                       }
                                   }],

                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [
                            {
                                ticks: {
                                    beginAtZero: true
                                }
                            }
                        ],
                        XAxes: [
                            {
                                ticks: {
                                    beginAtZero: true
                                }
                            }
                        ]
                    }
                }
            });

    </script>
}
